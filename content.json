{"meta":{"title":"Hexo","subtitle":"","description":"","author":"zzz","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"","slug":"stock-online-one","date":"2021-01-09T06:53:47.920Z","updated":"2021-01-09T06:53:47.951Z","comments":true,"path":"2021/01/09/stock-online-one/","link":"","permalink":"http://example.com/2021/01/09/stock-online-one/","excerpt":"stock_online_one /*! jQuery v1.11.3 | (c) 2005, 2015 jQuery Foundation, Inc. | jquery.org/license */ !function(a,b){\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(\"jQuery requires a window with a document\");return b(a)}:b(a)}(\"undefined\"!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k={},l=\"1.11.3\",m=function(a,b){return new m.fn.init(a,b)},n=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,o=/^-ms-/,p=/-([\\da-z])/gi,q=function(a,b){return b.toUpperCase()};m.fn=m.prototype={jquery:l,constructor:m,selector:\"\",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=m.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return m.each(this,a,b)},map:function(a){return this.pushStack(m.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},m.extend=m.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for(\"boolean\"==typeof g&&(j=g,g=arguments[h]||{},h++),\"object\"==typeof g||m.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(e=arguments[h]))for(d in e)a=g[d],c=e[d],g!==c&&(j&&c&&(m.isPlainObject(c)||(b=m.isArray(c)))?(b?(b=!1,f=a&&m.isArray(a)?a:[]):f=a&&m.isPlainObject(a)?a:{},g[d]=m.extend(j,f,c)):void 0!==c&&(g[d]=c));return g},m.extend({expando:\"jQuery\"+(l+Math.random()).replace(/\\D/g,\"\"),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return\"function\"===m.type(a)},isArray:Array.isArray||function(a){return\"array\"===m.type(a)},isWindow:function(a){return null!=a&&a==a.window},isNumeric:function(a){return!m.isArray(a)&&a-parseFloat(a)+1>=0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},isPlainObject:function(a){var b;if(!a||\"object\"!==m.type(a)||a.nodeType||m.isWindow(a))return!1;try{if(a.constructor&&!j.call(a,\"constructor\")&&!j.call(a.constructor.prototype,\"isPrototypeOf\"))return!1}catch(c){return!1}if(k.ownLast)for(b in a)return j.call(a,b);for(b in a);return void 0===b||j.call(a,b)},type:function(a){return null==a?a+\"\":\"object\"==typeof a||\"function\"==typeof a?h[i.call(a)]||\"object\":typeof a},globalEval:function(b){b&&m.trim(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(o,\"ms-\").replace(p,q)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=r(a);if(c){if(g){for(;f>e;e++)if(d=b.apply(a[e],c),d===!1)break}else for(e in a)if(d=b.apply(a[e],c),d===!1)break}else if(g){for(;f>e;e++)if(d=b.call(a[e],e,a[e]),d===!1)break}else for(e in a)if(d=b.call(a[e],e,a[e]),d===!1)break;return a},trim:function(a){return null==a?\"\":(a+\"\").replace(n,\"\")},makeArray:function(a,b){var c=b||[];return null!=a&&(r(Object(a))?m.merge(c,\"string\"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){var d;if(b){if(g)return g.call(b,a,c);for(d=b.length,c=c?0>c?Math.max(0,d+c):c:0;d>c;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,b){var c=+b.length,d=0,e=a.length;while(c>d)a[e++]=b[d++];if(c!==c)while(void 0!==b[d])a[e++]=b[d++];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,f=0,g=a.length,h=r(a),i=[];if(h)for(;g>f;f++)d=b(a[f],f,c),null!=d&&i.push(d);else for(f in a)d=b(a[f],f,c),null!=d&&i.push(d);return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return\"string\"==typeof b&&(f=a[b],b=a,a=f),m.isFunction(a)?(c=d.call(arguments,2),e=function(){return a.apply(b||this,c.concat(d.call(arguments)))},e.guid=a.guid=a.guid||m.guid++,e):void 0},now:function(){return+new Date},support:k}),m.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"),function(a,b){h[\"[object \"+b+\"]\"]=b.toLowerCase()});function r(a){var b=\"length\"in a&&a.length,c=m.type(a);return\"function\"===c||m.isWindow(a)?!1:1===a.nodeType&&b?!0:\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a}var s=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=\"sizzle\"+1*new Date,v=a.document,w=0,x=0,y=ha(),z=ha(),A=ha(),B=function(a,b){return a===b&&(l=!0),0},C=1","text":"stock_online_one /*! jQuery v1.11.3 | (c) 2005, 2015 jQuery Foundation, Inc. | jquery.org/license */ !function(a,b){\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(\"jQuery requires a window with a document\");return b(a)}:b(a)}(\"undefined\"!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k={},l=\"1.11.3\",m=function(a,b){return new m.fn.init(a,b)},n=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,o=/^-ms-/,p=/-([\\da-z])/gi,q=function(a,b){return b.toUpperCase()};m.fn=m.prototype={jquery:l,constructor:m,selector:\"\",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=m.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return m.each(this,a,b)},map:function(a){return this.pushStack(m.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},m.extend=m.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for(\"boolean\"==typeof g&&(j=g,g=arguments[h]||{},h++),\"object\"==typeof g||m.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(e=arguments[h]))for(d in e)a=g[d],c=e[d],g!==c&&(j&&c&&(m.isPlainObject(c)||(b=m.isArray(c)))?(b?(b=!1,f=a&&m.isArray(a)?a:[]):f=a&&m.isPlainObject(a)?a:{},g[d]=m.extend(j,f,c)):void 0!==c&&(g[d]=c));return g},m.extend({expando:\"jQuery\"+(l+Math.random()).replace(/\\D/g,\"\"),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return\"function\"===m.type(a)},isArray:Array.isArray||function(a){return\"array\"===m.type(a)},isWindow:function(a){return null!=a&&a==a.window},isNumeric:function(a){return!m.isArray(a)&&a-parseFloat(a)+1>=0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},isPlainObject:function(a){var b;if(!a||\"object\"!==m.type(a)||a.nodeType||m.isWindow(a))return!1;try{if(a.constructor&&!j.call(a,\"constructor\")&&!j.call(a.constructor.prototype,\"isPrototypeOf\"))return!1}catch(c){return!1}if(k.ownLast)for(b in a)return j.call(a,b);for(b in a);return void 0===b||j.call(a,b)},type:function(a){return null==a?a+\"\":\"object\"==typeof a||\"function\"==typeof a?h[i.call(a)]||\"object\":typeof a},globalEval:function(b){b&&m.trim(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(o,\"ms-\").replace(p,q)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=r(a);if(c){if(g){for(;f>e;e++)if(d=b.apply(a[e],c),d===!1)break}else for(e in a)if(d=b.apply(a[e],c),d===!1)break}else if(g){for(;f>e;e++)if(d=b.call(a[e],e,a[e]),d===!1)break}else for(e in a)if(d=b.call(a[e],e,a[e]),d===!1)break;return a},trim:function(a){return null==a?\"\":(a+\"\").replace(n,\"\")},makeArray:function(a,b){var c=b||[];return null!=a&&(r(Object(a))?m.merge(c,\"string\"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){var d;if(b){if(g)return g.call(b,a,c);for(d=b.length,c=c?0>c?Math.max(0,d+c):c:0;d>c;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,b){var c=+b.length,d=0,e=a.length;while(c>d)a[e++]=b[d++];if(c!==c)while(void 0!==b[d])a[e++]=b[d++];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,f=0,g=a.length,h=r(a),i=[];if(h)for(;g>f;f++)d=b(a[f],f,c),null!=d&&i.push(d);else for(f in a)d=b(a[f],f,c),null!=d&&i.push(d);return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return\"string\"==typeof b&&(f=a[b],b=a,a=f),m.isFunction(a)?(c=d.call(arguments,2),e=function(){return a.apply(b||this,c.concat(d.call(arguments)))},e.guid=a.guid=a.guid||m.guid++,e):void 0},now:function(){return+new Date},support:k}),m.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"),function(a,b){h[\"[object \"+b+\"]\"]=b.toLowerCase()});function r(a){var b=\"length\"in a&&a.length,c=m.type(a);return\"function\"===c||m.isWindow(a)?!1:1===a.nodeType&&b?!0:\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a}var s=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=\"sizzle\"+1*new Date,v=a.document,w=0,x=0,y=ha(),z=ha(),A=ha(),B=function(a,b){return a===b&&(l=!0),0},C=1","categories":[],"tags":[]},{"title":"stock_online_one","slug":"stock-online-one","date":"2021-01-09T04:48:05.000Z","updated":"2021-01-09T06:52:29.754Z","comments":true,"path":"2021/01/09/stock-online-one/","link":"","permalink":"http://example.com/2021/01/09/stock-online-one/","excerpt":"EG算法，泛投资组合策略","text":"EG算法，泛投资组合策略 投资场景说明 初始金额S0=1S_0=1S0​=1，初始投资比例b1=[1/m,⋯ ,1/m]b_1=[1/m,\\cdots,1/m]b1​=[1/m,⋯,1/m]，一共有T个时间， 每一期投资比例为btb_tbt​，相对价格xt=pt/pt−1x_t=p_t/p_{t-1}xt​=pt​/pt−1​。 总的财富ST=∑i=1TbixiS_T=\\sum_{i=1}^{T}b_ix_iST​=∑i=1T​bi​xi​。 定常再调整策略为每一期的相对比例b=bt,∀t∈(1,T)b=b_t,\\forall t \\in (1,T)b=bt​,∀t∈(1,T)。 EG策略 优化目标函数为： ηlog(bt+1xt)+DRE(bt+1∣∣bt)\\eta log(b_{t+1}x_t)+D_{RE}(b_{t+1}||b_{t}) ηlog(bt+1​xt​)+DRE​(bt+1​∣∣bt​) 得到的结果是： bt+1,i=bt,iexp(ηxt,i/(btxt))Ztb_{t+1,i}=\\frac {b_{t,i}exp(\\eta x_{t,i}/(b_tx_t))}{Z_t} bt+1,i​=Zt​bt,i​exp(ηxt,i​/(bt​xt​))​ 其中，ZtZ_tZt​是一个正则化系数。 证明的简要说明 计算DRE(u∣∣bt+1)−DRE(u∣∣bt)D_{RE}(u||b_{t+1})-D_{RE}(u||b_t)DRE​(u∣∣bt+1​)−DRE​(u∣∣bt​) 找到DRE(u∣∣bt+1)−DRE(u∣∣b1)D_{RE}(u||b_{t+1})-D_{RE}(u||b_1)DRE​(u∣∣bt+1​)−DRE​(u∣∣b1​)与后悔度之间的联系 计算就好 注：log(Zt)log(Z_t)log(Zt​)的计算用到了两步放缩很巧妙 作者的补充 因为选择η\\etaη的时候面临直接等于T相关的数，以及假设了xt,ix_{t,i}xt,i​大于 某个值，所以增加了一个相对价格的扩展xt~=(1−α/N)xt+(α/N)1\\tilde{x_t}=(1-\\alpha/N)x_t+ (\\alpha/N)1xt​~​=(1−α/N)xt​+(α/N)1。 证明部分是直接通过btxt~b_t \\tilde{x_t}bt​xt​~​过度到bt~xt\\tilde{b_t} x_tbt​~​xt​。 说一下目标和想法： 目标uxtu x_tuxt​和bt~xt\\tilde{b_t} x_tbt​~​xt​很接近 通过第一个证明，找到uxt~u \\tilde{x_t}uxt​~​和btxt~b_t \\tilde{x_t}bt​xt​~​距离 btxt~b_t \\tilde{x_t}bt​xt​~​与bt~xt\\tilde{b_t} x_tbt​~​xt​过渡等式，即证。","categories":[{"name":"essay","slug":"essay","permalink":"http://example.com/categories/essay/"}],"tags":[{"name":"research","slug":"research","permalink":"http://example.com/tags/research/"}]},{"title":"My new post","slug":"My-new-post","date":"2021-01-03T11:14:47.000Z","updated":"2021-01-03T11:14:47.857Z","comments":true,"path":"2021/01/03/My-new-post/","link":"","permalink":"http://example.com/2021/01/03/My-new-post/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2021-01-03T09:59:59.614Z","updated":"2021-01-03T12:03:51.236Z","comments":true,"path":"2021/01/03/hello-world/","link":"","permalink":"http://example.com/2021/01/03/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post 1$ hexo new &quot;My New Post&quot; More info: Writing Run server 1$ hexo server More info: Server Generate static files 1$ hexo generate More info: Generating Deploy to remote sites 1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"jupyter 同wifi互通","slug":"jupyter-common1","date":"2020-12-31T08:05:43.000Z","updated":"2021-01-03T12:05:23.034Z","comments":true,"path":"2020/12/31/jupyter-common1/","link":"","permalink":"http://example.com/2020/12/31/jupyter-common1/","excerpt":"跨平台同wifi使用jupyter","text":"跨平台同wifi使用jupyter 做了什么 在同一个局域网下，可以跨平台使用jupyter notebook 在主机上使用虚拟电脑的Jupyter notebook 如何做到 参考链接 生成配置文件 anaconda prompt中输入命令*“jupyter notebook --generate-config”* 进入python后设置密码 12from notebook.auth import passwdpasswd() 修改配置文件 主要是ip均可访问，password给上述输入密码后的值，不要自动打开Jupyter notebook，以及给一个端口号 启动Jupyter notebook windows下在cmd中使用ipconfig看ipv4的地址，利用此地址便可以在同一局域网下通过浏览器访问jupyter notebook 关于虚拟机 我是采用virtual box下面的ubuntu18.04来实践的。 注意，在网络中那里要选择桥接网络（virtual box界面），上面的设置密码和配置都要做。 ubuntu的terminal中使用ip addr来获取对应inet的ip。 虚拟机参考","categories":[{"name":"Diary","slug":"Diary","permalink":"http://example.com/categories/Diary/"}],"tags":[]},{"title":"HW2","slug":"hw2","date":"2020-12-28T22:10:27.000Z","updated":"2021-01-03T12:04:15.513Z","comments":true,"path":"2020/12/29/hw2/","link":"","permalink":"http://example.com/2020/12/29/hw2/","excerpt":"一个没什么用的附件","text":"一个没什么用的附件 输出平均得分最高的10部电影名称 画直方图，列出各类别电影的数量，注意同一部电影不要重复计算 输出每部电影的平均得分及标准差,要有电影名称，不含年 输出职业编号为’1’,‘6’，‘16’的user的性别分布，并通过饼状图显示 使用pyspark计算并输出： 使用motify查找并输出所有这样的人：有两个或以上的人关注他，他又至少关注两个或以上的人。 输出pageRank排名前10的所有人 输出入度排名前10的所有人 Content and Use of Files &lt;h2&gt; Character Encoding &lt;/h2&gt; &lt;p&gt; The three data files are encoded as &lt;a href=&quot;http://en.wikipedia.org/wiki/Utf-8&quot;&gt;UTF-8&lt;/a&gt;. This is a departure from previous MovieLens data sets, which used different character encodings. If accented characters in movie titles or tag values (e.g. Misérables, Les (1995)) display incorrectly, make sure that any program reading the data, such as a text editor, terminal, or script, is configured for UTF-8. &lt;/p&gt; &lt;h2&gt; User Ids &lt;/h2&gt; &lt;p&gt; Movielens users were selected at random for inclusion. Their ids have been anonymized. &lt;/p&gt; &lt;p&gt; Users were selected separately for inclusion in the ratings and tags data sets, which implies that user ids may appear in one set but not the other. &lt;/p&gt; &lt;p&gt; The anonymized values are consistent between the ratings and tags data files. That is, user id &lt;em&gt;n&lt;/em&gt;, if it appears in both files, refers to the same real MovieLens user. &lt;/p&gt; &lt;h2&gt; Ratings Data File Structure &lt;/h2&gt; &lt;p&gt; All ratings are contained in the file &lt;code&gt;ratings.dat&lt;/code&gt;. Each line of this file represents one rating of one movie by one user, and has the following format: &lt;/p&gt; &lt;p class=&quot;file_line_structure&quot;&gt; &lt;code&gt;UserID::MovieID::Rating::Timestamp&lt;/code&gt; &lt;/p&gt; &lt;p&gt; The lines within this file are ordered first by UserID, then, within user, by MovieID. &lt;/p&gt; &lt;p&gt; Ratings are made on a 5-star scale, with half-star increments. &lt;/p&gt; &lt;p&gt; &lt;a href=&quot;http://en.wikipedia.org/wiki/Unix_time&quot;&gt;Timestamps&lt;/a&gt; represent seconds since midnight Coordinated Universal Time (UTC) of January 1, 1970. &lt;/p&gt; &lt;h2&gt; Tags Data File Structure &lt;/h2&gt; &lt;p&gt; All tags are contained in the file &lt;code&gt;tags.dat&lt;/code&gt;. Each line of this file represents one tag applied to one movie by one user, and has the following format: &lt;/p&gt; &lt;p class=&quot;file_line_structure&quot;&gt; &lt;code&gt;UserID::MovieID::Tag::Timestamp&lt;/code&gt; &lt;/p&gt; &lt;p&gt; The lines within this file are ordered first by UserID, then, within user, by MovieID. &lt;/p&gt; &lt;p&gt; &lt;a href=&quot;http://en.wikipedia.org/wiki/Tag_(metadata)&quot;&gt;Tags&lt;/a&gt; are user generated metadata about movies. Each tag is typically a single word, or short phrase. The meaning, value and purpose of a particular tag is determined by each user. &lt;/p&gt; &lt;p&gt; &lt;a href=&quot;http://en.wikipedia.org/wiki/Unix_time&quot;&gt;Timestamps&lt;/a&gt; represent seconds since midnight Coordinated Universal Time (UTC) of January 1, 1970. &lt;/p&gt; &lt;h2&gt; Movies Data File Structure &lt;/h2&gt; &lt;p&gt; Movie information is contained in the file &lt;code&gt;movies.dat&lt;/code&gt;. Each line of this file represents one movie, and has the following format: &lt;/p&gt; &lt;p class=&quot;file_line_structure&quot;&gt; &lt;code&gt;MovieID::Title::Genres&lt;/code&gt; &lt;/p&gt; &lt;p&gt; MovieID is the real MovieLens id. &lt;/p&gt; &lt;p&gt; Movie titles, by policy, should be entered identically to those found in &lt;a href=&quot;http://www.imdb.com/&quot;&gt;IMDB&lt;/a&gt;, including year of release. However, they are entered manually, so errors and inconsistencies may exist. &lt;/p&gt; &lt;p&gt; Genres are a pipe-separated list, and are selected from the following: &lt;/p&gt; &lt;ul&gt; &lt;li&gt;Action&lt;/li&gt; &lt;li&gt;Adventure&lt;/li&gt; &lt;li&gt;Animation&lt;/li&gt; &lt;li&gt;Children's&lt;/li&gt; &lt;li&gt;Comedy&lt;/li&gt; &lt;li&gt;Crime&lt;/li&gt; &lt;li&gt;Documentary&lt;/li&gt; &lt;li&gt;Drama&lt;/li&gt; &lt;li&gt;Fantasy&lt;/li&gt; &lt;li&gt;Film-Noir&lt;/li&gt; &lt;li&gt;Horror&lt;/li&gt; &lt;li&gt;Musical&lt;/li&gt; &lt;li&gt;Mystery&lt;/li&gt; &lt;li&gt;Romance&lt;/li&gt; &lt;li&gt;Sci-Fi&lt;/li&gt; &lt;li&gt;Thriller&lt;/li&gt; &lt;li&gt;War&lt;/li&gt; &lt;li&gt;Western&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt; Cross-Validation Subset Generation Scripts &lt;/h2&gt; &lt;p&gt; A Unix shell script, &lt;code&gt;split_ratings.sh&lt;/code&gt;, is provided that, if desired, can be used to split the ratings data for five-fold cross-validation of rating predictions. It depends on a second script, allbut.pl, which is also included and is written in Perl. They should run without modification under Linux, Mac OS X, Cygwin or other Unix like systems. &lt;/p&gt; &lt;p&gt; Running &lt;code&gt;split_ratings.sh&lt;/code&gt; will use &lt;code&gt;ratings.dat&lt;/code&gt; as input, and produce the fourteen output files described below. Multiple runs of the script will produce identical results. &lt;/p&gt; &lt;table style=&quot;width:75%&quot; border=&quot;1&quot;&gt; &lt;tr&gt; &lt;th style=&quot;width:25%&quot;&gt;File Names&lt;/th&gt; &lt;th&gt;Description&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; r1.train, r2.train, r3.train, r4.train, r5.train&lt;br/&gt; r1.test, r2.test, r3.test, r4.test, r5.test&lt;br/&gt; &lt;/td&gt; &lt;td&gt; The data sets r1.train and r1.test through r5.train and r5.test are 80%/20% splits of the ratings data into training and test data. Each of r1, ..., r5 have disjoint test sets; this if for 5 fold cross validation (where you repeat your experiment with each training and test set and average the results). &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; ra.train, rb.train&lt;br/&gt; ra.test, rb.test&lt;br/&gt; &lt;/td&gt; &lt;td&gt; The data sets ra.train, ra.test, rb.train, and rb.test split the ratings data into a training set and a test set with exactly 10 ratings per user in the test set. The sets ra.test and rb.test are disjoint. &lt;/td&gt; &lt;/tr&gt;","categories":[{"name":"Diary","slug":"Diary","permalink":"http://example.com/categories/Diary/"}],"tags":[]},{"title":"leetcode1","slug":"leetcode1","date":"2020-12-27T08:55:58.000Z","updated":"2021-01-03T12:05:42.231Z","comments":true,"path":"2020/12/27/leetcode1/","link":"","permalink":"http://example.com/2020/12/27/leetcode1/","excerpt":"开始做题，树1","text":"开始做题，树1 tree alg 第一题 相同的树 给定两个二叉树，编写一个函数来检验它们是否相同。 如果两个树在结构上相同，并且节点具有相同的值，则认为它们是相同的。 12345678910111213141516171819class TreeNode(object): def __init__(self, x): self.val = x self.left = None self.right = Noneclass Solution(object): def isSameTree(self, p, q): &quot;&quot;&quot; type p: TreeNode type q: TreeNode &quot;&quot;&quot; if not p and not q: return True if not p or not q: return False if p.val != q.val: return False return self.isSameTree(p.left, q.left) and self.isSameTree(p.right, q.right) 第二题 对称树 给定一个二叉树，检查它是否是镜像对称的。 1234567891011121314class Solution(object): def isSymmetric(self, root): if not root: return True return self.is_mirror(root.left, root.right) def is_mirror(self, left_node, right_node): if not left_node and not right_node: return True if not left_node or not right_node: return False if not left_node.val != right_node.val: return False return self.is_mirror(right_node.right, left_node.left) and self.is_mirror(right_node.left, left_node.right)","categories":[{"name":"Diary","slug":"Diary","permalink":"http://example.com/categories/Diary/"}],"tags":[]}],"categories":[{"name":"essay","slug":"essay","permalink":"http://example.com/categories/essay/"},{"name":"Diary","slug":"Diary","permalink":"http://example.com/categories/Diary/"}],"tags":[{"name":"research","slug":"research","permalink":"http://example.com/tags/research/"}]}